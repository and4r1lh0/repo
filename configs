ZXhjbGF2ZTovL3ZtZXNzP2VOcVRZbUJnTURYVU16ZlhNekxRTXpUZWFCTE93TERVd01UTXlEQXBNVlUzTWNuWVROZlFNRFZaTjhuU3dGTFh3TWpFS0RIWjBNakF3TUFvc2JUa2ZVbnloN3o4dktlTmpTQ1NBUXpBTEE0b2d4RklyM2k3WU9fYkxaTVV3bngxUTV3RGRQMGNGZDR1MlBOMi0yb3d1VjNCTFVnWHlYcERLeU1qWXlNVGtFRUFuTGt3VkEKZXhjbGF2ZTovL3ZtZXNzP2VOcVRZbUJnTURMV016UXowN093MERPMDJHd1N6c0N3MU1ERXpNZ3dLVEZWTnpISjJFelgwREExV1RmSjBzQlMxOERJeENneDJkREl3TURBS0xHMDVIMUo4b2U4X0x5bmpZMGdrZ0VNd0N3T0tJTVJTSzk4dTJEdjJ5MlRGTUo4ZFVPY0EzVDlIQlhlTHRqemR2c0tNTGxXd2RsREY5bC1ZeXNqSTJNakU1QkpBUE0zTU1FCmV4Y2xhdmU6Ly92bGVzcz9lTnFUWW1CZ3NMRFVNelF4MFRNeTFUTzAzTHFia1lGaGFiS3hrYkZocXFHSmJtSnlvb0d1aVhHS2dhNkZwVG1RU0RKSlRUSktUVFpPTms3THk4OTdXcEw4QVVRMU5wYmtmRTdPeUM4b1NDM1N5OG5MVFN6S1RpMHB5RWxNVHRYTFNfMlNzYW14a2FHeHNiR2lKS2RZdDZpZ3FFSzNMTE00TXo5UHR6U2x3TVJrYzBWcHlnY0dEcUF6UUNZQkxXZFk4WGJCM3JkYkppbUUtZWlHT0Fmb2h2Z0VLN3hkc09mdDlwVmdjcFdDaTZzdXNvdE5yVXhNaklIYUdBQ29aMGg1CmV4Y2xhdmU6Ly92bWVzcz9lTnFUWW1CZ01EUzIxRE0wTTlJek5MZlFzOXk2bTVHQllhbWxnYmxSaXJHeHBhNnhoWVdwcmtsYXFxRnVra0ZTc3E2UlpWcWl1YW1CcVltaFFXcGlhY243OHM5cG1SV3BLV2s1LVlrbG1YckphVV8wY3pMenNzdUxuekNBUUdOSkRycDhZMk1qQXdpRFFWNS0zbE1HRGlnRGFDM0R5cmNMOXI3ZE1ra2h6RWMzeERsQU44UW5XT0h0Z2oxdnQ2OEVrNnNVWEZ4MVVSeHJhbVZpWWd3eUNRQkQ5a0YyCmV4Y2xhdmU6Ly93Zz9lTnBqWm1CZ01EUXowak0wdGRRenREVFZNelRldklrWktHUU9GRExUTTlBejBqZmV0TmJYWGI4aXdNQ2t4TTFQMjhMTHk4Tzh4TXk5SXF2TXN5ckVNTlFzMTZBa0w5aXQzRWs3SkNVcjB6M1pkbTFTYm9TX3M3YWJvVnVGcTYtYlpVcGxwcmVSaDZtLVlYQm9TWldIZ1ZkcFdMNnBZWVpSZVVCYWVtVy1iU01ESzlBdVMzTWRJeE5qSGZNZGpFREhoRHNHWFFCU0RBQkxCeWxh
ewogICJkbnMiOiB7CiAgICAiZmFsbGJhY2tTdHJhdGVneSI6ICJkaXNhYmxlZElmQW55TWF0Y2giLAogICAgInNlcnZlcnMiOiBbCiAgICAgIHsKICAgICAgICAiYWRkcmVzcyI6ICJ0Y3A6Ly8xLjEuMS4xIiwKICAgICAgICAicXVlcnlTdHJhdGVneSI6ICJVc2VJUHY0IgogICAgICB9CiAgICBdCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJsaXN0ZW4iOiAiMTI3LjAuMC4xIiwKICAgICAgInBvcnQiOiAyMDgwLAogICAgICAicHJvdG9jb2wiOiAic29ja3MiLAogICAgICAic2V0dGluZ3MiOiB7CiAgICAgICAgImF1dGgiOiAibm9hdXRoIiwKICAgICAgICAidWRwIjogdHJ1ZQogICAgICB9LAogICAgICAic25pZmZpbmciOiB7CiAgICAgICAgImRlc3RPdmVycmlkZSI6IFsKICAgICAgICAgICJodHRwIiwKICAgICAgICAgICJ0bHMiLAogICAgICAgICAgInF1aWMiCiAgICAgICAgXSwKICAgICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICAgIm1ldGFkYXRhT25seSI6IGZhbHNlLAogICAgICAgICJyb3V0ZU9ubHkiOiB0cnVlCiAgICAgIH0sCiAgICAgICJ0YWciOiAic29ja3MiCiAgICB9LAogICAgewogICAgICAibGlzdGVuIjogIjEyNy4wLjAuMSIsCiAgICAgICJwb3J0IjogNjQ1MCwKICAgICAgInByb3RvY29sIjogImRva29kZW1vLWRvb3IiLAogICAgICAic2V0dGluZ3MiOiB7CiAgICAgICAgImFkZHJlc3MiOiAiMTI3LjAuMC4xIiwKICAgICAgICAibmV0d29yayI6ICJ0Y3AsdWRwIiwKICAgICAgICAicG9ydCI6IDAKICAgICAgfSwKICAgICAgInRhZyI6ICJkbnMtaW4iCiAgICB9CiAgXSwKICAibG9nIjogewogICAgImxvZ2xldmVsIjogIndhcm5pbmciCiAgfSwKICAib3V0Ym91bmRzIjogWwogICAgewogICAgICAiZG9tYWluU3RyYXRlZ3kiOiAiQXNJcyIsCiAgICAgICJwcm90b2NvbCI6ICJ2bWVzcyIsCiAgICAgICJwcm94eVNldHRpbmdzIjogewogICAgICAgICJ0YWciOiAicHJveHktZ2xvYmFsLTM0OTk4IiwKICAgICAgICAidHJhbnNwb3J0TGF5ZXIiOiB0cnVlCiAgICAgIH0sCiAgICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAidm5leHQiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjUxLjc3LjIwLjEzMSIsCiAgICAgICAgICAgICJwb3J0IjogMjIzMjQsCiAgICAgICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiaWQiOiAiMDQ2MjFiYWUtYWIzNi0xMWVjLWI5MDktMDI0MmFjMTIwMDAyIiwKICAgICAgICAgICAgICAgICJzZWN1cml0eSI6ICJhdXRvIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgInN0cmVhbVNldHRpbmdzIjogewogICAgICAgICJuZXR3b3JrIjogInRjcCIsCiAgICAgICAgInNlY3VyaXR5IjogIm5vbmUiLAogICAgICAgICJ0Y3BTZXR0aW5ncyI6IHt9CiAgICAgIH0sCiAgICAgICJ0YWciOiAicHJveHkiCiAgICB9LAogICAgewogICAgICAiZG9tYWluU3RyYXRlZ3kiOiAiQXNJcyIsCiAgICAgICJwcm90b2NvbCI6ICJoeXN0ZXJpYTIiLAogICAgICAic2V0dGluZ3MiOiB7CiAgICAgICAgInNlcnZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJhZGRyZXNzIjogIjQ2LjI5LjE2My4xNzEiLAogICAgICAgICAgICAicG9ydCI6IDMyNTU1CiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAic3RyZWFtU2V0dGluZ3MiOiB7CiAgICAgICAgImh5MlNldHRpbmdzIjogewogICAgICAgICAgImNvbmdlc3Rpb24iOiB7CiAgICAgICAgICAgICJkb3duX21icHMiOiAwLAogICAgICAgICAgICAidXBfbWJwcyI6IDAKICAgICAgICAgIH0sCiAgICAgICAgICAicGFzc3dvcmQiOiAiZG9uZ3RhaXdhbmcuY29tIiwKICAgICAgICAgICJ1c2VfdWRwX2V4dGVuc2lvbiI6IHRydWUKICAgICAgICB9LAogICAgICAgICJuZXR3b3JrIjogImh5c3RlcmlhMiIsCiAgICAgICAgInNlY3VyaXR5IjogInRscyIsCiAgICAgICAgInRsc1NldHRpbmdzIjogewogICAgICAgICAgImFsbG93SW5zZWN1cmUiOiB0cnVlLAogICAgICAgICAgInNlcnZlck5hbWUiOiAiYXBwbGUuY29tIgogICAgICAgIH0KICAgICAgfSwKICAgICAgInRhZyI6ICJwcm94eS1nbG9iYWwtMzQ5OTgiCiAgICB9LAogICAgewogICAgICAicHJvdG9jb2wiOiAiZnJlZWRvbSIsCiAgICAgICJ0YWciOiAiZGlyZWN0IgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImZyZWVkb20iLAogICAgICAidGFnIjogImJ5cGFzcyIKICAgIH0sCiAgICB7CiAgICAgICJwcm90b2NvbCI6ICJibGFja2hvbGUiLAogICAgICAidGFnIjogImJsb2NrIgogICAgfSwKICAgIHsKICAgICAgInByb3RvY29sIjogImRucyIsCiAgICAgICJwcm94eVNldHRpbmdzIjogewogICAgICAgICJ0YWciOiAicHJveHkiLAogICAgICAgICJ0cmFuc3BvcnRMYXllciI6IHRydWUKICAgICAgfSwKICAgICAgInNldHRpbmdzIjogewogICAgICAgICJ1c2VyTGV2ZWwiOiAxCiAgICAgIH0sCiAgICAgICJ0YWciOiAiZG5zLW91dCIKICAgIH0KICBdLAogICJwb2xpY3kiOiB7CiAgICAibGV2ZWxzIjogewogICAgICAiMSI6IHsKICAgICAgICAiY29ubklkbGUiOiAzMAogICAgICB9CiAgICB9LAogICAgInN5c3RlbSI6IHsKICAgICAgInN0YXRzT3V0Ym91bmREb3dubGluayI6IHRydWUsCiAgICAgICJzdGF0c091dGJvdW5kVXBsaW5rIjogdHJ1ZQogICAgfQogIH0sCiAgInJvdXRpbmciOiB7CiAgICAiZG9tYWluU3RyYXRlZ3kiOiAiQXNJcyIsCiAgICAicnVsZXMiOiBbCiAgICAgIHsKICAgICAgICAiaW5ib3VuZFRhZyI6IFsKICAgICAgICAgICJkbnMtaW4iCiAgICAgICAgXSwKICAgICAgICAib3V0Ym91bmRUYWciOiAiZG5zLW91dCIsCiAgICAgICAgInR5cGUiOiAiZmllbGQiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaXAiOiBbCiAgICAgICAgICAiNTEuNzcuMjAuMTMxIiwKICAgICAgICAgICI0Ni4yOS4xNjMuMTcxIgogICAgICAgIF0sCiAgICAgICAgIm91dGJvdW5kVGFnIjogImRpcmVjdCIsCiAgICAgICAgInR5cGUiOiAiZmllbGQiCiAgICAgIH0KICAgIF0KICB9LAogICJzdGF0cyI6IHt9Cn0=